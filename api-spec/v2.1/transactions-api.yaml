openapi: 3.0.0
info:
  version: 2.0.0
  title: Pagopa eCommerce payment transactions service
  description: This microservice handles transaction's lifecycle and workflow.
  contact:
    name: pagoPA - Touchpoints team
tags:
  - name: transactions
    description: Api's for performing a transaction
    externalDocs:
      url: https://pagopa.atlassian.net/wiki/spaces/I/pages/611287199/-servizio+transactions+service
      description: Technical specifications
externalDocs:
  url: https://pagopa.atlassian.net/wiki/spaces/I/pages/492339720/pagoPA+eCommerce+Design+Review
  description: Design review
servers:
  - url: https://api.platform.pagopa.it/transactions-service
security:
  - ApiKeyAuth: [ ]
paths:
  /v2.1/transactions:
    post:
      operationId: newTransaction
      tags:
        - transactions
      description: Create a new transaction activating the payments notice by meaning of 'Nodo' ActivatePaymentNotice primitive
      parameters:
        - in: header
          name: X-Client-Id
          required: true
          description: Transaction origin (populated by APIM policy)
          schema:
            $ref: '#/components/schemas/ClientId'
        - in: header
          name: x-correlation-id
          required: true
          description: NPG correlation id
          schema:
            $ref: '#/components/schemas/CorrelationId'
        - in: header
          name: x-user-id
          required: false
          description: User id (valued for authenticated payments)
          schema:
            $ref: '#/components/schemas/UserId'

      summary: Make a new transaction
      requestBody:
        $ref: "#/components/requestBodies/NewTransactionRequest"
      responses:
        '200':
          description: New transaction successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewTransactionResponse'
        '400':
          description: Formally invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '404':
          description: Node cannot find the services needed to process this request in its configuration. This error is most likely to occur when submitting a non-existing RPT id.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ValidationFaultPaymentDataErrorProblemJson'
                  - $ref: '#/components/schemas/ValidationFaultPaymentUnknownProblemJson'
        '409':
          description: Conflict on payment status
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PaymentOngoingStatusFaultPaymentProblemJson'
                  - $ref: '#/components/schemas/PaymentExpiredStatusFaultPaymentProblemJson'
                  - $ref: '#/components/schemas/PaymentCanceledStatusFaultPaymentProblemJson'
                  - $ref: '#/components/schemas/PaymentDuplicatedStatusFaultPaymentProblemJson'
        '502':
          description: PagoPA services are not available or request is rejected by PagoPa
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/GatewayFaultPaymentProblemJson'
                  - $ref: '#/components/schemas/ValidationFaultPaymentUnavailableProblemJson'
        '503':
          description: EC services are not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyConfigurationFaultPaymentProblemJson'
components:
  schemas:
    RptId:
      description: Digital payment receipt identifier
      type: string
      pattern: '([a-zA-Z\d]{1,35})|(RF\d{2}[a-zA-Z\d]{1,21})'
    PaymentNoticeInfo:
      description: Informations about a single payment notice
      type: object
      properties:
        rptId:
          $ref: '#/components/schemas/RptId'
        amount:
          $ref: '#/components/schemas/AmountEuroCents'
      required:
        - rptId
        - amount
      example:
        rptId: string
        amount: 100
    PaymentInfo:
      description: Informations about transaction payments
      type: object
      properties:
        paymentToken:
          type: string
        rptId:
          $ref: '#/components/schemas/RptId'
        reason:
          type: string
        amount:
          $ref: '#/components/schemas/AmountEuroCents'
        transferList:
          type: array
          items:
            $ref: '#/components/schemas/Transfer'
          minItems: 1
          maxItems: 5
        isAllCCP:
          type: boolean
          description: Flag for poste psp enabling in gec request
        creditorReferenceId:
          type: string
          description: Creditor notice number's
      required:
        - rptId
        - amount
        - transferList
        - isAllCCP
      example:
        rptId: "77777777777302012387654312384"
        paymentToken: "paymentToken1"
        reason: "reason1"
        amount: 600
        isAllCCP: false
        transferList:
          - paFiscalCode: "77777777777"
            digitalStamp: false
            transferCategory: "transferCategory1"
            transferAmount: 500
          - paFiscalCode: "11111111111"
            digitalStamp: true
            transferCategory: "transferCategory2"
            transferAmount: 100
    NewTransactionRequest:
      description: Request body for creating a new transaction
      type: object
      properties:
        paymentNotices:
          type: array
          items:
            $ref: '#/components/schemas/PaymentNoticeInfo'
          minItems: 1
          maxItems: 5
          example:
            -  rptId: "77777777777302012387654312384"
               amount: 100
            -  rptId: "77777777777302012387654312385"
               amount: 200
        emailToken:
          description: Email token
          type: string
          example : 28a7c9d3-6e03-4107-8894-9cd7abb9eff7
        idCart:
          description: Cart identifier provided by creditor institution
          type: string
          example: idCartFromCreditorInstitution
        orderId:
          description: NPG order id
          type: string
          example: orderId
      required:
        - paymentNotices
        - emailToken
        - orderId
    NewTransactionResponse:
      type: object
      description: Transaction data returned when creating a new transaction
      properties:
        transactionId:
          description: the transaction unique identifier
          type: string
        status:
          $ref: "#/components/schemas/TransactionStatus"
        payments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentInfo'
          minItems: 1
          maxItems: 5
          example:
            - rptId: "77777777777302012387654312384"
              paymentToken: "paymentToken1"
              reason: "reason1"
              amount: 600
              transferList:
                - paFiscalCode: "77777777777"
                  digitalStamp: false
                  transferCategory: "transferCategory1"
                  transferAmount: 500
                - paFiscalCode: "11111111111"
                  digitalStamp: true
                  transferCategory: "transferCategory2"
                  transferAmount: 100
            - rptId: "77777777777302012387654312385"
              paymentToken: "paymentToken2"
              reason: "reason2"
              amount: 400
              transferList:
                - paFiscalCode: "44444444444"
                  digitalStamp: true
                  transferCategory: "transferCategory1"
                  transferAmount: 200
                - paFiscalCode: "22222222222"
                  digitalStamp: false
                  transferCategory: "transferCategory2"
                  transferAmount: 100
        clientId:
          description: transaction client id
          enum:
            - IO
            - CHECKOUT
            - CHECKOUT_CART
        authToken:
          description: authorization token
          type: string
        idCart:
          description: Cart identifier provided by creditor institution
          type: string
          example: idCartFromCreditorInstitution
      required:
        - transactionId
        - status
        - payments
        - clientId
    AmountEuroCents:
      description: Amount for payments, in euro cents
      type: integer
      format: int64
      minimum: 0
      maximum: 99999999999
    TransactionStatus:
      type: string
      description: Possible statuses a transaction can be in
      enum:
        - ACTIVATED
        - AUTHORIZATION_REQUESTED
        - AUTHORIZATION_COMPLETED
        - CLOSURE_REQUESTED
        - CLOSED
        - CLOSURE_ERROR
        - NOTIFIED_OK
        - NOTIFIED_KO
        - NOTIFICATION_ERROR
        - NOTIFICATION_REQUESTED
        - EXPIRED
        - REFUNDED
        - CANCELED
        - EXPIRED_NOT_AUTHORIZED
        - UNAUTHORIZED
        - REFUND_ERROR
        - REFUND_REQUESTED
        - CANCELLATION_REQUESTED
        - CANCELLATION_EXPIRED
    ClientId:
      type: string
      description: Enumerations of client ids
      enum:
        - IO
        - CHECKOUT
        - CHECKOUT_CART
        - WISP_REDIRECT
    UserId:
      description: unique user identifier
      type: string
      format: uuid
    CorrelationId:
      description: correlationId
      type: string
      format: uuid
    Transfer:
      type: object
      description: The dto that contains information about the creditor entities
      properties:
        paFiscalCode:
          type: string
          description: The creditor institution fiscal code
          pattern: '^[a-zA-Z0-9]{11}'
        digitalStamp:
          type: boolean
          description: True if it is a digital stamp. False otherwise
        transferCategory:
          type: string
          description: The taxonomy of the transfer
        transferAmount:
          $ref: '#/components/schemas/AmountEuroCents'
      required:
        - paFiscalCode
        - digitalStamp
        - transferAmount
    ProblemJson:
      description: Body definition for error responses containing failure details
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          $ref: "#/components/schemas/HttpStatusCode"
        detail:
          type: string
          description: |-
            A human readable explanation specific to this occurrence of the
            problem.
          example: There was an error processing the request
        instance:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
    HttpStatusCode:
      type: integer
      format: int32
      description: |-
        The HTTP status code generated by the origin server for this occurrence
        of the problem.
      minimum: 100
      maximum: 600
      exclusiveMaximum: true
      example: 200
    ValidationFaultPaymentUnavailableProblemJson:
      description: |-
        A PaymentProblemJson-like type specific for the GetPayment operations.
        Possible values of `detail_v2` are limited to faults pertaining to validation errors.
      type: object
      properties:
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        faultCodeCategory:
          type: string
          enum:
            - PAYMENT_UNAVAILABLE
        faultCodeDetail:
          $ref: '#/components/schemas/ValidationFaultPaymentUnavailable'
      required:
        - faultCodeCategory
        - faultCodeDetail
    ValidationFaultPaymentUnknownProblemJson:
      description: |-
        A PaymentProblemJson-like type specific for the GetPayment operations.
        Possible values of `detail_v2` are limited to faults pertaining to validation errors.
      type: object
      properties:
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        faultCodeCategory:
          type: string
          enum:
            - PAYMENT_UNKNOWN
        faultCodeDetail:
          $ref: '#/components/schemas/ValidationFaultPaymentUnknown'
      required:
        - faultCodeCategory
        - faultCodeDetail
    ValidationFaultPaymentDataErrorProblemJson:
      description: |-
        A PaymentProblemJson-like type specific for the GetPayment operations.
        Possible values of `detail_v2` are limited to faults pertaining to validation errors.
      type: object
      properties:
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        faultCodeCategory:
          type: string
          enum:
            - PAYMENT_DATA_ERROR
        faultCodeDetail:
          $ref: '#/components/schemas/ValidationFaultPaymentDataError'
      required:
        - faultCodeCategory
        - faultCodeDetail
    PaymentOngoingStatusFaultPaymentProblemJson:
      description: |-
        A PaymentProblemJson-like type specific for the GetPayment and ActivatePayment operations.
        Possible values of `detail_v2` are limited to faults pertaining to Nodo errors related to payment status conflicts.
      type: object
      properties:
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        faultCodeCategory:
          type: string
          enum:
            - PAYMENT_ONGOING
        faultCodeDetail:
          $ref: '#/components/schemas/PaymentOngoingStatusFault'
      required:
        - faultCodeCategory
        - faultCodeDetail
    PaymentExpiredStatusFaultPaymentProblemJson:
      description: |-
        A PaymentProblemJson-like type specific for the GetPayment and ActivatePayment operations.
        Possible values of `detail_v2` are limited to faults pertaining to Nodo errors related to payment status conflicts.
      type: object
      properties:
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        faultCodeCategory:
          type: string
          enum:
            - PAYMENT_EXPIRED
        faultCodeDetail:
          $ref: '#/components/schemas/PaymentExpiredStatusFault'
      required:
        - faultCodeCategory
        - faultCodeDetail
    PaymentCanceledStatusFaultPaymentProblemJson:
      description: |-
        A PaymentProblemJson-like type specific for the GetPayment and ActivatePayment operations.
        Possible values of `detail_v2` are limited to faults pertaining to Nodo errors related to payment status conflicts.
      type: object
      properties:
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        faultCodeCategory:
          type: string
          enum:
            - PAYMENT_CANCELED
        faultCodeDetail:
          $ref: '#/components/schemas/PaymentCanceledStatusFault'
      required:
        - faultCodeCategory
        - faultCodeDetail
    PaymentDuplicatedStatusFaultPaymentProblemJson:
      description: |-
        A PaymentProblemJson-like type specific for the GetPayment and ActivatePayment operations.
        Possible values of `detail_v2` are limited to faults pertaining to Nodo errors related to payment status conflicts.
      type: object
      properties:
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        faultCodeCategory:
          type: string
          enum:
            - PAYMENT_DUPLICATED
        faultCodeDetail:
          $ref: '#/components/schemas/PaymentDuplicatedStatusFault'
      required:
        - faultCodeCategory
        - faultCodeDetail
    GatewayFaultPaymentProblemJson:
      description: |-
        A PaymentProblemJson-like type specific for the GetPayment and ActivatePayment operations.
        Possible values of `detail_v2` are limited to faults pertaining to Nodo errors.
      type: object
      properties:
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        faultCodeCategory:
          type: string
          enum:
            - GENERIC_ERROR
        faultCodeDetail:
          $ref: '#/components/schemas/GatewayFault'
      required:
        - faultCodeCategory
        - faultCodeDetail
    PartyConfigurationFaultPaymentProblemJson:
      description: |-
        A PaymentProblemJson-like type specific for the GetPayment
      type: object
      properties:
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        faultCodeCategory:
          type: string
          enum:
            - DOMAIN_UNKNOWN
        faultCodeDetail:
          $ref: '#/components/schemas/PartyConfigurationFault'
      required:
        - faultCodeCategory
        - faultCodeDetail
    FaultCategory:
      description: |-
        Fault code categorization for the PagoPA Verifica and Attiva operations.
        Possible categories are:
        - `PAYMENT_DUPLICATED`
        - `PAYMENT_ONGOING`
        - `PAYMENT_EXPIRED`
        - `PAYMENT_UNAVAILABLE`
        - `PAYMENT_UNKNOWN`
        - `DOMAIN_UNKNOWN`
        - `PAYMENT_CANCELED`
        - `GENERIC_ERROR`
        - `PAYMENT_DATA_ERROR`
      type: string
      enum:
        - PAYMENT_DUPLICATED
        - PAYMENT_ONGOING
        - PAYMENT_EXPIRED
        - PAYMENT_UNAVAILABLE
        - PAYMENT_UNKNOWN
        - DOMAIN_UNKNOWN
        - PAYMENT_CANCELED
        - GENERIC_ERROR
        - PAYMENT_DATA_ERROR
    PaymentOngoingStatusFault:
      description: |-
        Fault codes for errors related to payment attempts that cause conflict with the current payment status,
        such as a duplicated payment attempt or a payment attempt made while another attempt is still being processed.
        Should be mapped to 409 HTTP status code.
        For further information visit https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.
        Possible fault codes are:
        - `PPT_PAGAMENTO_IN_CORSO`
        - `PAA_PAGAMENTO_IN_CORSO`
      type: string
      enum:
        - PPT_PAGAMENTO_IN_CORSO
        - PAA_PAGAMENTO_IN_CORSO
    PaymentExpiredStatusFault:
      description: |-
        Fault codes for errors related to payment attempts that cause conflict with the current payment status,
        such as a duplicated payment attempt or a payment attempt made while another attempt is still being processed.
        Should be mapped to 409 HTTP status code.
        For further information visit https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.
        Possible fault codes are:
        - `PAA_PAGAMENTO_SCADUTO`
      type: string
      enum:
        - PAA_PAGAMENTO_SCADUTO
    PaymentCanceledStatusFault:
      description: |-
        Fault codes for errors related to payment attempts that cause conflict with the current payment status,
        such as a duplicated payment attempt or a payment attempt made while another attempt is still being processed.
        Should be mapped to 409 HTTP status code.
        For further information visit https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.
        Possible fault codes are:
        - `PAA_PAGAMENTO_ANNULLATO`
      type: string
      enum:
        - PAA_PAGAMENTO_ANNULLATO
    PaymentDuplicatedStatusFault:
      description: |-
        Fault codes for errors related to payment attempts that cause conflict with the current payment status,
        such as a duplicated payment attempt or a payment attempt made while another attempt is still being processed.
        Should be mapped to 409 HTTP status code.
        For further information visit https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.
        Possible fault codes are:
        - `PAA_PAGAMENTO_DUPLICATO`
        - `PPT_PAGAMENTO_DUPLICATO`
      type: string
      enum:
        - PAA_PAGAMENTO_DUPLICATO
        - PPT_PAGAMENTO_DUPLICATO
    ValidationFaultPaymentUnavailable:
      description: |-
        Fault codes for errors related to well-formed requests to ECs not present inside Nodo, should be mapped to 404 HTTP status code.
        Most of the time these are generated when users input a wrong fiscal code or notice number.
        For further information visit https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.
        Possible fault codes are:
        - `PPT_PSP_SCONOSCIUTO`
        - `PPT_PSP_DISABILITATO`
        - `PPT_INTERMEDIARIO_PSP_SCONOSCIUTO`
        - `PPT_INTERMEDIARIO_PSP_DISABILITATO`
        - `PPT_CANALE_SCONOSCIUTO`
        - `PPT_CANALE_DISABILITATO`
        - `PPT_AUTENTICAZIONE`
        - `PPT_AUTORIZZAZIONE`
        - `PPT_DOMINIO_DISABILITATO`
        - `PPT_INTERMEDIARIO_PA_DISABILITATO`
        - `PPT_STAZIONE_INT_PA_DISABILITATA`
        - `PPT_CODIFICA_PSP_SCONOSCIUTA`
        - `PPT_SEMANTICA`
        - `PPT_SYSTEM_ERROR`
        - `PAA_SEMANTICA`
      type: string
      enum:
        - PPT_PSP_SCONOSCIUTO
        - PPT_PSP_DISABILITATO
        - PPT_INTERMEDIARIO_PSP_SCONOSCIUTO
        - PPT_INTERMEDIARIO_PSP_DISABILITATO
        - PPT_CANALE_SCONOSCIUTO
        - PPT_CANALE_DISABILITATO
        - PPT_AUTENTICAZIONE
        - PPT_AUTORIZZAZIONE
        - PPT_DOMINIO_DISABILITATO
        - PPT_INTERMEDIARIO_PA_DISABILITATO
        - PPT_STAZIONE_INT_PA_DISABILITATA
        - PPT_CODIFICA_PSP_SCONOSCIUTA
        - PPT_SEMANTICA
        - PPT_SYSTEM_ERROR
        - PAA_SEMANTICA
    ValidationFaultPaymentDataError:
      description: |-
        Fault codes for errors related to well-formed requests to ECs not present inside Nodo, should be mapped to 404 HTTP status code.
        Most of the time these are generated when users input a wrong fiscal code or notice number.
        For further information visit https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.
        Possible fault codes are:
        - `PPT_SINTASSI_EXTRAXSD`
        - `PPT_SINTASSI_XSD`
        - `PPT_DOMINIO_SCONOSCIUTO`
        - `PPT_STAZIONE_INT_PA_SCONOSCIUTA`
      type: string
      enum:
        - PPT_SINTASSI_EXTRAXSD
        - PPT_SINTASSI_XSD
        - PPT_DOMINIO_SCONOSCIUTO
        - PPT_STAZIONE_INT_PA_SCONOSCIUTA
    ValidationFaultPaymentUnknown:
      description: |-
        Fault codes for errors related to well-formed requests to ECs not present inside Nodo, should be mapped to 404 HTTP status code.
        Most of the time these are generated when users input a wrong fiscal code or notice number.
        For further information visit https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.
        Possible fault codes are:
        - `PAA_PAGAMENTO_SCONOSCIUTO`
      type: string
      enum:
        - PAA_PAGAMENTO_SCONOSCIUTO
    GatewayFault:
      description: |-
        Fault codes for generic downstream services errors, should be mapped to 502 HTTP status code.
        For further information visit https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.
      type: string
    PartyConfigurationFault:
      description: |-
        Fault codes for fatal errors from ECs, should be mapped to 503 HTTP status code.
        For further information visit https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.
        Possible fault codes are:
        - `PPT_STAZIONE_INT_PA_IRRAGGIUNGIBILE`
        - `PPT_STAZIONE_INT_PA_TIMEOUT`
        - `PPT_STAZIONE_INT_PA_ERRORE_RESPONSE`
        - `PPT_IBAN_NON_CENSITO`
        - `PAA_SINTASSI_EXTRAXSD`
        - `PAA_SINTASSI_XSD`
        - `PAA_ID_DOMINIO_ERRATO`
        - `PAA_ID_INTERMEDIARIO_ERRATO`
        - `PAA_STAZIONE_INT_ERRATA`
        - `PAA_ATTIVA_RPT_IMPORTO_NON_VALIDO`
        - `PPT_ERRORE_EMESSO_DA_PAA`
        - `PAA_SYSTEM_ERROR`
      type: string
      enum:
        - PPT_STAZIONE_INT_PA_IRRAGGIUNGIBILE
        - PPT_STAZIONE_INT_PA_TIMEOUT
        - PPT_STAZIONE_INT_PA_ERRORE_RESPONSE
        - PPT_IBAN_NON_CENSITO
        - PAA_SINTASSI_EXTRAXSD
        - PAA_SINTASSI_XSD
        - PAA_ID_DOMINIO_ERRATO
        - PAA_ID_INTERMEDIARIO_ERRATO
        - PAA_STAZIONE_INT_ERRATA
        - PAA_ATTIVA_RPT_IMPORTO_NON_VALIDO
        - PPT_ERRORE_EMESSO_DA_PAA
        - PAA_SYSTEM_ERROR
  requestBodies:
    NewTransactionRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NewTransactionRequest"
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: api key authentication