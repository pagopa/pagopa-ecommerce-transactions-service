# Deploy to Azure Kubernetes Service:
# - DEV
# - UAT -> PROD
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

parameters:
  - name: 'IMAGE_TAG'
    displayName: 'Tag used for docker image in ACR'
    type: string
    default: perf
  - name: 'SOURCE_REF'
    displayName: 'Source ref that will be checked out to build service (build skipped if empty, otherwise docker image will be replaced)'
    type: string
    default: '-'
  - name: 'BUILD_IMAGE'
    displayName: 'Check this to (re)build image'
    type: boolean
  - name: "ENABLE_CANARY"
    displayName: "Enable canary?"
    type: boolean
resources:
  repositories:
    - repository: pagopaCommons
      type: github
      name: pagopa/azure-pipeline-templates
      ref: refs/tags/v2.10.1
      endpoint: 'io-azure-devops-github-ro'
    - repository: pagopaCheckoutTests
      type: github
      name: pagopa/pagopa-checkout-tests
      ref: main
      endpoint: 'io-azure-devops-github-ro'

pool:
  vmImage: ubuntu-latest

# --- START Deploy DEV --- #
stages:

  # --- START Deploy UAT --- #
  - stage: "Build_release_candidate"
    displayName: "Build release candidate"
    condition: eq(${{parameters.BUILD_IMAGE}},true)
    jobs:
      - job: "build"
        displayName: 'Build release candidate docker image'
        steps:
          - script: |
              checkoutVersion=${{ parameters.SOURCE_REF }}
              echo "Checkout current version repo tag: [$checkoutVersion]" 
              git checkout $checkoutVersion
            displayName: "Checkout source ref"
          - template: templates/docker-release/template.yaml@pagopaCommons
            parameters:
              CONTAINER_REGISTRY_SERVICE_CONN: $(UAT_CONTAINER_REGISTRY_SERVICE_CONN)
              CONTAINER_REGISTRY_FQDN: $(UAT_CONTAINER_NAMESPACE)
              DOCKER_IMAGE_NAME: $(K8S_IMAGE_REPOSITORY_NAME)
              DOCKER_IMAGE_TAG: ${{ parameters.IMAGE_TAG }}
              FORCE_REPLACE_DOCKER_IMAGE: true
          - template: azure-templates/chart-current-version.yml

  - stage: "Deploy_UAT_Green"
    displayName: 'UAT green deployment'
    dependsOn: Build_release_candidate
    condition: in(dependencies.Build_release_candidate.result, 'Succeeded', 'Skipped')
    variables:
      app_version: ${{ parameters.IMAGE_TAG }}
    jobs:
      - deployment: "Green_deployment"
        displayName: "Green deployment"
        pool:
          name: pagopa-uat-linux
        environment: 'UAT'
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                  displayName: "Checkout"
                - task: KubectlInstaller@0
                - task: Bash@3
                  name: update_chart_version
                  displayName: 'Setup helm microservice chart'
                  inputs:
                    targetType: "inline"
                    script: |
                      helm repo add microservice-chart https://pagopa.github.io/aks-microservice-chart-blueprint
                      helm dep build helm
                - template: azure-templates/helm-microservice-chart-deploy.yml
                  parameters:
                    DO_DEPLOY: true
                    DO_BLUE_GREEN_DEPLOY: ${{ parameters.ENABLE_CANARY }}
                    ENV: 'UAT'
                    KUBERNETES_SERVICE_CONN: $(UAT_KUBERNETES_SERVICE_CONN)
                    NAMESPACE: ecommerce
                    APP_NAME: soak-$(K8S_IMAGE_REPOSITORY_NAME)
                    VALUE_FILE: "helm/values-uat.yaml"
                    GREEN_VERSION: $(app_version)

