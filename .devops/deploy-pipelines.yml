# Deploy to Azure Kubernetes Service:
# - DEV
# - UAT -> PROD
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

parameters:
  - name: 'DEV_DEPLOY'
    displayName: 'Deploy on DEV environment'
    type: boolean
    default: True
    values:
      - False
      - True
  - name: 'UAT_PROD_DEPLOY'
    displayName: 'Deploy on UAT environment with PROD promotion'
    type: boolean
    default: False
    values:
      - False
      - True
  - name: 'SKIP_BUILD'
    displayName: 'Check this flag to skip build and proceed to deploy a docker image previously built'
    type: boolean
    default: False
    values:
      - False
      - True
  - name: "FORCE_REPLACE_DOCKER_IMAGE"
    displayName: "Force the existing docker image to be replaced (latest tag)"
    type: boolean
    default: False
    values:
      - False
      - True
  - name: "UAT_SKIP_BLUE_DEPLOYMENT"
    displayName: "Skip blue/green UAT deployment strategy: activating this parameter no blue version will be created and the pipeline proceed building and deploy artifact green version"
    type: boolean
    default: True
    values:
      - False
      - True
  - name: "PROD_SKIP_BLUE_DEPLOYMENT"
    displayName: "Skip blue/green PROD deployment strategy: activating this parameter no blue version will be created and the pipeline proceed building and deploy artifact green version"
    type: boolean
    default: True
    values:
      - False
      - True
resources:
  repositories:
    - repository: pagopaCommons
      type: github
      name: pagopa/azure-pipeline-templates
      ref: refs/tags/v2.10.1
      endpoint: 'io-azure-devops-github-ro'
    - repository: pagopaCheckoutTests
      type: github
      name: pagopa/pagopa-checkout-tests
      ref: main
      endpoint: 'io-azure-devops-github-ro'

pool:
  vmImage: ubuntu-latest

stages:
  # --- START Deploy UAT --- #
  - stage: "Build_release_candidate"
    displayName: 'Build release candidate'
    dependsOn: []
    condition:
      and(
        succeeded(),
        eq(${{parameters.UAT_PROD_DEPLOY}}, true),
        or(
          eq(variables['Build.SourceBranch'], 'refs/heads/main'),
          eq(variables['Build.SourceBranch'], 'refs/heads/test-soak-java21-blue'),
          startsWith(variables['Build.SourceBranch'], 'refs/tags')
        )
       )
    jobs:
      - job: "build"
        displayName: 'Build release candidate docker image'
        steps:
          - template: templates/docker-release/template.yaml@pagopaCommons
            parameters:
              CONTAINER_REGISTRY_SERVICE_CONN: $(UAT_CONTAINER_REGISTRY_SERVICE_CONN)
              CONTAINER_REGISTRY_FQDN: $(UAT_CONTAINER_NAMESPACE)
              DOCKER_IMAGE_NAME: $(K8S_IMAGE_REPOSITORY_NAME)
              DOCKER_IMAGE_TAG: $(Build.SourceVersion)
              FORCE_REPLACE_DOCKER_IMAGE: ${{ parameters.FORCE_REPLACE_DOCKER_IMAGE }}
          - template: azure-templates/chart-current-version.yml

  - stage: "Deploy_UAT_Blue"
    displayName: 'UAT blue deployment'
    dependsOn: Build_release_candidate
    condition:
      and(
      succeeded(),
      eq(${{parameters.UAT_SKIP_BLUE_DEPLOYMENT}}, False)
      )
    variables:
      green_app_version: $[ stageDependencies.Build_release_candidate.build.outputs['chart_current_version.appVersion'] ]
    jobs:
      - deployment: "Blue_deployment"
        displayName: "Blue deployment"
        pool:
          name: pagopa-uat-linux
        environment: 'UAT'
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                  displayName: "Checkout"
                - task: KubectlInstaller@0
                - task: Bash@3
                  name: update_chart_version
                  displayName: 'Setup helm microservice chart'
                  inputs:
                    targetType: "inline"
                    script: |
                      helm repo add microservice-chart https://pagopa.github.io/aks-microservice-chart-blueprint
                      helm dep build helm
                - template: azure-templates/helm-microservice-chart-deploy.yml
                  parameters:
                    DO_DEPLOY: true
                    DO_BLUE_GREEN_DEPLOY: true
                    ENV: 'UAT'
                    KUBERNETES_SERVICE_CONN: $(UAT_KUBERNETES_SERVICE_CONN)
                    NAMESPACE: ecommerce
                    APP_NAME: blue-$(K8S_IMAGE_REPOSITORY_NAME)
                    VALUE_FILE: "helm/values-uat.yaml"
                    GREEN_VERSION: $(green_app_version)
                    BLUE_VERSION: $(Build.SourceVersion)

  - stage: "API_Blue_UAT_test"
    displayName: 'Running API test on blue app'
    dependsOn: Deploy_UAT_Blue
    jobs:
      - job: newman_api_test
        steps:
          - checkout: pagopaCheckoutTests
          - template: azure-templates/api-tests.yml
            parameters:
              COLLECTION_TEST_FILE: "api-tests/checkout-tests/npg/checkout-for-ecommerce-api.tests.json"
              ENV_FILE: "api-tests/uat.transactions.blue.envs.json"
              TEST_FILE_PREFIX: "blue-uat"