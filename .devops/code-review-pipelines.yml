variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  BRANCH_NAME: $[ replace(variables['System.PullRequest.SourceBranch'], 'refs/heads/', '') ]
trigger: none

pool:
  vmImage: ubuntu-latest

resources:
  repositories:
    - repository: pagopaEcommerceLocal
      type: github
      name: pagopa/pagopa-ecommerce-local 
      ref: main
      endpoint: 'io-azure-devops-github-ro'

stages:
  - stage: BuildEndUnitTest
    jobs: 
      - job: make_buildEndUnitTest 
        steps:
        - task: Cache@2
          inputs:
            key: 'maven | "$(Agent.OS)" | pom.xml'
            restoreKeys: |
              maven | "$(Agent.OS)"
              maven
            path: $(MAVEN_CACHE_FOLDER)
          displayName: Cache Maven local repo

        - task: SonarCloudPrepare@3
          displayName: 'Prepare SonarCloud analysis configuration'
          inputs:
            SonarCloud: '$(SONARCLOUD_SERVICE_CONN)'
            organization: '$(SONARCLOUD_ORG)'
            scannerMode: Other
            extraProperties: |
              sonar.projectKey=$(SONARCLOUD_PROJECT_KEY)
              sonar.projectName=$(SONARCLOUD_PROJECT_NAME)
              sonar.coverage.exclusions=**/config/*,**/*Mock*,**/model/*,**/utils/soap/*,**/mdcutilities/*,**/PagopaEcommerceTransactionsApplication.java
              sonar.coverage.jacoco.xmlReportPaths=./target/site/jacoco/jacoco.xml
              sonar.junit.reportPaths=target/surefire-reports/

        - bash: |
              docker run -p 10000:10000 -p 10001:10001 -p 10002:10002 mcr.microsoft.com/azure-storage/azurite &
          displayName: Run azurite to test Service - Storage integration

        - task: Maven@4
          inputs:
            mavenPomFile: 'pom.xml'
            mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '17'
            jdkArchitectureOption: 'x64'
            publishJUnitResults: false
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            goals: 'clean validate'
            sonarQubeRunAnalysis: false

        - task: Maven@4
          inputs:
            mavenPomFile: 'pom.xml'
            mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '17'
            jdkArchitectureOption: 'x64'
            publishJUnitResults: false
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            goals: 'clean verify'
            sonarQubeRunAnalysis: true

        - task: SonarCloudPublish@3
          displayName: 'Publish SonarCloud results on build summary'
          inputs:
            pollingTimeoutSec: '300'

        - task: PublishCodeCoverageResults@2
          inputs:
            codeCoverageTool: 'JaCoCo'
            summaryFileLocation: 'target/site/jacoco/jacoco.xml'
            reportDirectory: 'target/site/jacoco'
          displayName: 'Publish Code Coverage on Azure Devops'

  - stage: IntegrationTest
    dependsOn: []
    jobs: 
      - job: make_integration_test  
        steps:
        - checkout: pagopaEcommerceLocal
        - script: | 
            echo "##[debug] Change placeholder for ecommerce-transaction-service set branch: $(BRANCH_NAME)"
            sed -i "s/^ECOMMERCE_TRANSACTIONS_COMMIT_SHA=.*$/ECOMMERCE_TRANSACTIONS_COMMIT_SHA=$(BRANCH_NAME)/" .env
          displayName: 'Change transaction branch name ecommerce-local .env'
        - script: docker compose up pagopa-ecommerce-transactions-service pagopa-ecommerce-payment-methods-service pagopa-ecommerce-event-dispatcher-service mongo redis storage pagopa-pdv-mock pagopa-gec-mock pagopa-npg-mock pagopa-node-mock traefik azurite-init pagopa-psp-mock -d
          displayName: 'Run app with docker-compose'
        - script: |
              timeout 180 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8080/actuator/health/liveness)" != "200" ]]; do sleep 5; done' || exit 1
          displayName: 'Health check'
        - script: yarn global add newman
          displayName: 'newman installation'
        - script: newman run api-tests/transaction-service/npg/transaction-service_ecommerce_local.postman_collection.json --environment=api-tests/transaction-service/npg/transaction-service_ecommerce_local.postman_environment.json --reporters cli,junit --reporter-junit-export Results/NPG-api-TEST.xml
          displayName: 'Run api test for NPG integration'
        - script: newman run api-tests/transaction-service/redirect/transaction-service_ecommerce_local.postman_collection.json --environment=api-tests/transaction-service/redirect/transaction-service_ecommerce_local.postman_environment.json --reporters cli,junit --reporter-junit-export Results/REDIRECT-api-TEST.xml
          displayName: 'Run api test for REDIRECT integration'
          continueOnError: false
        - task: PublishTestResults@2
          inputs:
            testResultsFormat: 'JUnit'
            testResultsFiles: '**/*-TEST.xml' 
            searchFolder: '$(System.DefaultWorkingDirectory)'
